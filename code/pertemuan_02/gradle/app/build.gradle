plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.0'  // Optional: For building fat JARs
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    // flatDir {
    //     dirs 'lib'
    // }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    // implementation libs.guava

    implementation 'com.google.guava:guava:33.4.0-jre'  // Guava from Maven Central

    // Use the local JAR file (app.jar) from the 'lib' directory
    implementation files('lib/app.jar')
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.example.Main'  // Use direct assignment in Gradle 8
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jar {
    archiveBaseName = 'gradle'  // Set your JAR file name
    archiveVersion = '1.0.0'    // Set your JAR file version
    manifest {
        attributes(
            'Main-Class': 'com.example.Main'  // Main class for execution
        )
    }
}
