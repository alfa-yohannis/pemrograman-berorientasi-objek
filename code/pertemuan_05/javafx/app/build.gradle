/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.hibernate:hibernate-core:6.2.12.Final'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation "org.openjfx:javafx-controls:20.0.1"
    implementation "org.openjfx:javafx-fxml:20.0.1"
    implementation 'com.innoventsolutions.birt.runtime:org.eclipse.birt.runtime_4.8.0-20180626:4.8.0'

    // Test dependencies
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation libs.guava

    // // Include all JARs from BIRT runtime directory
    // fileTree(dir: '/data1/programs/birt-runtime-4.17.0-202409160710/ReportEngine/lib', include: ['*.jar']).each { file ->
    //     implementation files(file)
    // }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.Main'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

javafx {
    version = "21.0.1"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}
